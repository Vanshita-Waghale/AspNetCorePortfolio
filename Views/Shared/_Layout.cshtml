<!DOCTYPE html>
<html lang="en" data-theme="dark">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Portfolio</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />

    <style>
        :root[data-theme="dark"] {
            --sparkle-color: #fff;
        }

        :root[data-theme="light"] {
            --sparkle-color: orange;
        }

        body {
            padding-top: 80px;
        }

        .navbar-brand {
            color: orange !important;
            font-weight: bold;
        }

            .navbar-brand:hover,
            .navbar-nav .nav-link:hover {
                color: orange !important;
            }

        .navbar-nav .nav-link {
            font-weight: bold;
            transition: color 0.3s ease;
        }

        #navbar {
            height: 70px;
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 1050;
        }

        #themeToggleBtn {
            font-weight: bold;
            font-size: 0.875rem;
            padding: 0.375rem 1rem;
            height: 36px;
            white-space: nowrap;
            border: none;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

            #themeToggleBtn:focus {
                outline: none;
                box-shadow: none;
            }

        .sparkle {
            position: absolute;
            width: 6px;
            height: 6px;
            background: radial-gradient(circle, var(--sparkle-color), transparent);
            border-radius: 50%;
            pointer-events: none;
            opacity: 0.9;
            z-index: 9999;
            animation: glitterAnim 0.6s ease-out forwards;
        }

        @@keyframes glitterAnim {
            0%

        {
            transform: scale(1);
            opacity: 0.9;
            filter: drop-shadow(0 0 3px var(--sparkle-color));
        }

        100% {
            transform: translate(-50%, -50%) scale(0.5);
            opacity: 0;
            filter: drop-shadow(0 0 8px var(--sparkle-color));
        }

        }
    </style>

    @RenderSection("Scripts", required: false)
</head>
<body>
    <nav class="navbar navbar-expand-lg" id="navbar">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">MyPortfolio</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarContent"
                    aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse justify-content-end" id="navbarContent">
                <ul class="navbar-nav mb-2 mb-lg-0 align-items-center">
                    <li class="nav-item"><a class="nav-link" href="/">Home</a></li>
                    <li class="nav-item"><a class="nav-link" href="/Home/About">About</a></li>
                    <li class="nav-item"><a class="nav-link" href="/Home/Projects">Projects</a></li>
                    <li class="nav-item"><a class="nav-link" href="/Home/Contact">Contact</a></li>
                    <li class="nav-item ms-3">
                        <button id="themeToggleBtn" class="btn btn-light" onclick="toggleTheme()">Switch to Light Mode</button>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <main class="container">
        @RenderBody()
    </main>

    <footer class="text-center py-3 mt-5">
        <p class="mb-0">&copy; 2025 MyPortfolio | Built with ASP.NET Core</p>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const savedTheme = localStorage.getItem("theme") || "dark";
            document.documentElement.setAttribute("data-theme", savedTheme);
            updateButton(savedTheme);
            updateNavbar(savedTheme);

            const navLinks = document.querySelectorAll('.navbar-nav .nav-link');
            const navbarCollapse = document.getElementById('navbarContent');
            const bsCollapse = new bootstrap.Collapse(navbarCollapse, { toggle: false });

            navLinks.forEach(link => {
                link.addEventListener('click', function () {
                    if (navbarCollapse.classList.contains('show')) {
                        bsCollapse.hide();
                    }
                });
            });
        });

        function toggleTheme() {
            const current = document.documentElement.getAttribute("data-theme");
            const newTheme = current === "light" ? "dark" : "light";
            document.documentElement.setAttribute("data-theme", newTheme);
            localStorage.setItem("theme", newTheme);
            updateButton(newTheme);
            updateNavbar(newTheme);
        }

        function updateButton(theme) {
            const btn = document.getElementById("themeToggleBtn");
            btn.classList.remove("btn-light", "btn-dark");
            if (theme === "light") {
                btn.classList.add("btn-dark");
                btn.textContent = "Switch to Dark Mode";
            } else {
                btn.classList.add("btn-light");
                btn.textContent = "Switch to Light Mode";
            }
        }

        function updateNavbar(theme) {
            const navbar = document.getElementById("navbar");
            navbar.classList.remove("navbar-light", "bg-light", "navbar-dark", "bg-dark");
            if (theme === "light") {
                navbar.classList.add("navbar-light", "bg-light");
            } else {
                navbar.classList.add("navbar-dark", "bg-dark");
            }
        }

        document.addEventListener("mousemove", function (e) {
            if (e.target.closest('#themeToggleBtn')) return;

            const sparkle = document.createElement("div");
            sparkle.className = "sparkle";
            sparkle.style.left = e.pageX + "px";
            sparkle.style.top = e.pageY + "px";
            sparkle.style.transform = `translate(-50%, -50%) scale(${Math.random() * 0.8 + 0.3}) rotate(${Math.random() * 360}deg)`;
            document.body.appendChild(sparkle);
            setTimeout(() => sparkle.remove(), 600);
        });
    </script>
</body>
</html>
